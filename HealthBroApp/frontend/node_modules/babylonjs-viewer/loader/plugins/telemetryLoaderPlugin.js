"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var telemetryManager_1 = require("../../managers/telemetryManager");
var precisionDate_1 = require("babylonjs/Misc/precisionDate");
var TelemetryLoaderPlugin = /** @class */ (function () {
    function TelemetryLoaderPlugin() {
    }
    TelemetryLoaderPlugin.prototype.onInit = function (loader, model) {
        this._model = model;
        this._loadStart = precisionDate_1.PrecisionDate.Now;
    };
    TelemetryLoaderPlugin.prototype.onLoaded = function (model) {
        telemetryManager_1.telemetryManager.broadcast("Model Loaded", model.getViewerId(), {
            model: model,
            loadTime: precisionDate_1.PrecisionDate.Now - this._loadStart
        });
        telemetryManager_1.telemetryManager.flushWebGLErrors(model.rootMesh.getEngine(), model.getViewerId());
    };
    TelemetryLoaderPlugin.prototype.onError = function (message, exception) {
        this._loadEnd = precisionDate_1.PrecisionDate.Now;
        telemetryManager_1.telemetryManager.broadcast("Load Error", this._model.getViewerId(), {
            model: this._model,
            loadTime: this._loadEnd - this._loadStart
        });
        telemetryManager_1.telemetryManager.flushWebGLErrors(this._model.rootMesh.getEngine(), this._model.getViewerId());
    };
    TelemetryLoaderPlugin.prototype.onComplete = function () {
        this._loadEnd = precisionDate_1.PrecisionDate.Now;
        telemetryManager_1.telemetryManager.broadcast("Load Complete", this._model.getViewerId(), {
            model: this._model,
            loadTime: this._loadEnd - this._loadStart
        });
        telemetryManager_1.telemetryManager.flushWebGLErrors(this._model.rootMesh.getEngine(), this._model.getViewerId());
    };
    return TelemetryLoaderPlugin;
}());
exports.TelemetryLoaderPlugin = TelemetryLoaderPlugin;
//# sourceMappingURL=telemetryLoaderPlugin.js.map